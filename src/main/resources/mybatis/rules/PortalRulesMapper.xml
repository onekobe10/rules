<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gankki.demo.portal.rules.mapper.PortalRulesMapper">
    <resultMap id="BaseResultMap" type="com.gankki.demo.portal.rules.model.PortalRules">
        <id column="ID" property="id" jdbcType="VARCHAR"/>
        <result column="THEME" property="theme" jdbcType="VARCHAR"/>
        <result column="PRODUCT_TYPE" property="productType" jdbcType="VARCHAR"/>
        <result column="INTRODUCE" property="introduce" jdbcType="VARCHAR"/>
        <result column="BUILD_DATE" property="buildDate" jdbcType="TIMESTAMP"/>
        <result column="BUILD_PERSON" property="buildPerson" jdbcType="VARCHAR"/>
        <result column="REMARKS" property="remarks" jdbcType="VARCHAR"/>
        <result column="RULES" property="rules" jdbcType="VARCHAR"/>
    </resultMap>
    <!-- mybatis与ehcache的整合，ehcache.xml只能放在resources目录下，不能自定义，或者直接在按下面的方法设置 -->
    <cache type="org.mybatis.caches.ehcache.EhcacheCache"/>
    <!-- 二级缓存的开启标志，mybatis的二级缓存是以mapper为单位的 -->
    <!-- <cache type="org.mybatis.caches.ehcache.EhcacheCache" >
        <property name="timeToIdleSeconds" value="12000"/>  
        <property name="timeToLiveSeconds" value="3600"/>  
        <property name="maxEntriesLocalHeap" value="1000"/>  
        <property name="maxEntriesLocalDisk" value="10000000"/>  
        <property name="memoryStoreEvictionPolicy" value="LRU"/> 
    </cache>   -->
    <!-- 开启本Mapper的namespace下的二级缓存
       type:执行cache接口实现类的类型，mybatis默认使用PerpatualCache,
       要和ehcache整合，需要配置type为ehcache实现cache接口的类型-->
    <!-- <cache-ref namespace=""/> -->

    <select id="selectUserByTest" parameterType="com.gankki.demo.portal.rules.model.User"
            resultType="com.gankki.demo.portal.rules.model.User">
        select * from testuser t where t.username = #{username,jdbcType=VARCHAR}
    </select>

    <insert id="insertUserByTest" parameterType="com.gankki.demo.portal.rules.model.User">
        insert into testuser t
        (id,username,password,age)
        values
        (
        #{id,jdbcType=VARCHAR},
        #{username,jdbcType=VARCHAR},
        #{password,jdbcType=VARCHAR},
        '${age}'
        )
    </insert>

    <update id="updateRulesByTest" parameterType="string">
        update testuser t set t.username = #{update,jdbcType=VARCHAR} where t.age = 20
    </update>

    <update id="updateRuesByAge" parameterType="int">
        update testuser t set t.age = #{update,jdbcType=INTEGER} where t.username = '123'
    </update>

    <select id="selectTestUser" parameterType="int" resultType="string">
        select t.age from testuser t where t.age = #{int,jdbcType=INTEGER}
    </select>

    <select id="selectRulesByCreateDate" parameterType="string" resultType="string">
        select * from portal_rules t order by #{date,jdbcType=VARCHAR}
    </select>

    <select id="selectRulesByGroup" parameterType="string" resultType="string">
        select t.rules from portal_rules t group by ${date}
    </select>

    <select id="selectRulesByObject" parameterType="com.gankki.demo.portal.rules.model.PortalRules"
            resultMap="BaseResultMap">

        select
        <include refid="base_column_list"/>
        from portal_rules t
        <trim prefix="WHERE" prefixOverrides="AND|OR" suffix="" suffixOverrides="">
            <if test="theme != null and theme.length() > 0">
                and t.theme = #{theme,jdbcType=VARCHAR}
            </if>
            <if test="productType != null and productType.length() > 0">
                and t.product_type = #{productType,jdbcType=VARCHAR}
            </if>
            <if test="introduce != null and introduce.length() > 0">
                and t.introduce = #{introduce,jdbcType=VARCHAR}
            </if>
        </trim>
    </select>

    <sql id="base_column_list">
        ID,THEME,PRODUCT_TYPE,INTRODUCE,BUILD_PERSON,REMARKS,RULES
    </sql>
    <select id="selectAllRules" resultMap="BaseResultMap">
        select
        <include refid="base_column_list"/>
        from portal_rules t
    </select>

    <select id="selectRulesByMap" parameterType="map" resultMap="BaseResultMap">
        select * from portal_rules t
        <where>
            <if test="testMap1 != null and testMap1.length() > 0">
                <bind name="testMap1" value="'%'+testMap1+'%'"></bind>
            </if>
            t.introduce like concat(concat('%',#{testMap1}),'%') and
            t.build_person in
            <foreach item="item" index="index" collection="testMap"
                     open="(" close=")" separator=",">#{item}
            </foreach>
        </where>
    </select>

    <select id="selectRulesByArray" resultMap="BaseResultMap">
        select * from portal_rules t
        <where>
            t.build_person in
            <foreach item="item" index="index" collection="array"
                     open="(" close=")" separator=",">#{item}
            </foreach>
        </where>
    </select>

    <select id="selectRulesByList" parameterType="arrayList" resultMap="BaseResultMap">
        select * from portal_rules t
        <where>
            t.build_person in
            (
            <foreach item="item" index="index" collection="list"
                     separator=",">#{item}
            </foreach>
            )
        </where>

    </select>

    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        ID, THEME, PRODUCT_TYPE, INTRODUCE, BUILD_DATE, BUILD_PERSON, REMARKS, RULES
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="com.gankki.demo.portal.rules.model.PortalRulesExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from PORTAL_RULES
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from PORTAL_RULES
        where ID = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete from PORTAL_RULES
        where ID = #{id,jdbcType=VARCHAR}
    </delete>
    <delete id="deleteByExample" parameterType="com.gankki.demo.portal.rules.model.PortalRulesExample">
        delete from PORTAL_RULES
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.gankki.demo.portal.rules.model.PortalRules">
        insert into PORTAL_RULES (ID, THEME, PRODUCT_TYPE,
        INTRODUCE, BUILD_DATE, BUILD_PERSON,
        REMARKS, RULES)
        values (#{id,jdbcType=VARCHAR}, #{theme,jdbcType=VARCHAR}, #{productType,jdbcType=VARCHAR},
        #{introduce,jdbcType=VARCHAR}, #{buildDate,jdbcType=TIMESTAMP}, #{buildPerson,jdbcType=VARCHAR},
        #{remarks,jdbcType=VARCHAR}, #{rules,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.gankki.demo.portal.rules.model.PortalRules">
        insert into PORTAL_RULES
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                ID,
            </if>
            <if test="theme != null">
                THEME,
            </if>
            <if test="productType != null">
                PRODUCT_TYPE,
            </if>
            <if test="introduce != null">
                INTRODUCE,
            </if>
            <if test="buildDate != null">
                BUILD_DATE,
            </if>
            <if test="buildPerson != null">
                BUILD_PERSON,
            </if>
            <if test="remarks != null">
                REMARKS,
            </if>
            <if test="rules != null">
                RULES,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="theme != null">
                #{theme,jdbcType=VARCHAR},
            </if>
            <if test="productType != null">
                #{productType,jdbcType=VARCHAR},
            </if>
            <if test="introduce != null">
                #{introduce,jdbcType=VARCHAR},
            </if>
            <if test="buildDate != null">
                #{buildDate,jdbcType=TIMESTAMP},
            </if>
            <if test="buildPerson != null">
                #{buildPerson,jdbcType=VARCHAR},
            </if>
            <if test="remarks != null">
                #{remarks,jdbcType=VARCHAR},
            </if>
            <if test="rules != null">
                #{rules,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.gankki.demo.portal.rules.model.PortalRulesExample"
            resultType="java.lang.Integer">
        select count(*) from PORTAL_RULES
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update PORTAL_RULES
        <set>
            <if test="record.id != null">
                ID = #{record.id,jdbcType=VARCHAR},
            </if>
            <if test="record.theme != null">
                THEME = #{record.theme,jdbcType=VARCHAR},
            </if>
            <if test="record.productType != null">
                PRODUCT_TYPE = #{record.productType,jdbcType=VARCHAR},
            </if>
            <if test="record.introduce != null">
                INTRODUCE = #{record.introduce,jdbcType=VARCHAR},
            </if>
            <if test="record.buildDate != null">
                BUILD_DATE = #{record.buildDate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.buildPerson != null">
                BUILD_PERSON = #{record.buildPerson,jdbcType=VARCHAR},
            </if>
            <if test="record.remarks != null">
                REMARKS = #{record.remarks,jdbcType=VARCHAR},
            </if>
            <if test="record.rules != null">
                RULES = #{record.rules,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update PORTAL_RULES
        set ID = #{record.id,jdbcType=VARCHAR},
        THEME = #{record.theme,jdbcType=VARCHAR},
        PRODUCT_TYPE = #{record.productType,jdbcType=VARCHAR},
        INTRODUCE = #{record.introduce,jdbcType=VARCHAR},
        BUILD_DATE = #{record.buildDate,jdbcType=TIMESTAMP},
        BUILD_PERSON = #{record.buildPerson,jdbcType=VARCHAR},
        REMARKS = #{record.remarks,jdbcType=VARCHAR},
        RULES = #{record.rules,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.gankki.demo.portal.rules.model.PortalRules">
        update PORTAL_RULES
        <set>
            <if test="theme != null">
                THEME = #{theme,jdbcType=VARCHAR},
            </if>
            <if test="productType != null">
                PRODUCT_TYPE = #{productType,jdbcType=VARCHAR},
            </if>
            <if test="introduce != null">
                INTRODUCE = #{introduce,jdbcType=VARCHAR},
            </if>
            <if test="buildDate != null">
                BUILD_DATE = #{buildDate,jdbcType=TIMESTAMP},
            </if>
            <if test="buildPerson != null">
                BUILD_PERSON = #{buildPerson,jdbcType=VARCHAR},
            </if>
            <if test="remarks != null">
                REMARKS = #{remarks,jdbcType=VARCHAR},
            </if>
            <if test="rules != null">
                RULES = #{rules,jdbcType=VARCHAR},
            </if>
        </set>
        where ID = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.gankki.demo.portal.rules.model.PortalRules">
        update PORTAL_RULES
        set THEME = #{theme,jdbcType=VARCHAR},
        PRODUCT_TYPE = #{productType,jdbcType=VARCHAR},
        INTRODUCE = #{introduce,jdbcType=VARCHAR},
        BUILD_DATE = #{buildDate,jdbcType=TIMESTAMP},
        BUILD_PERSON = #{buildPerson,jdbcType=VARCHAR},
        REMARKS = #{remarks,jdbcType=VARCHAR},
        RULES = #{rules,jdbcType=VARCHAR}
        where ID = #{id,jdbcType=VARCHAR}
    </update>
</mapper>